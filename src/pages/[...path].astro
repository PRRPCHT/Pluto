---
import Layout from '../layouts/Layout.astro';
import Lightbox from '../components/Lightbox.astro';
import { getAllGalleryPaths, getGalleryData } from '../utils/galleryUtils';
import { marked } from 'marked';

export async function getStaticPaths() {
  const paths = getAllGalleryPaths();
  
  return paths.map(path => ({
    params: { 
      path: path === '/' ? undefined : path.slice(1) // Remove leading slash for non-root
    }
  }));
}

const { path } = Astro.params;
const galleryPath = path ? `/${path}` : '/';
const galleryData = getGalleryData(galleryPath);

// Convert markdown to HTML if description exists
const descriptionHtml = galleryData.description ? marked(galleryData.description) : '';
---

<Layout title={`Gallery ${galleryData.currentPath === '/' ? '' : `- ${galleryData.breadcrumbs[galleryData.breadcrumbs.length - 1].name}`}`}>
  <!-- Breadcrumbs for navbar (visible on lg+ screens only) -->
  <nav slot="breadcrumbs-navbar" class="flex flex-wrap items-center">
    {galleryData.parentPath !== null && (
      <a href={`${galleryData.parentPath}`} class="link hover:text-primary no-underline me-4">
        &larr;
      </a>
    )}
    {galleryData.parentPath == null && (
      <span class="me-4 opacity-20">
        &larr;  
      </span>
    )}
    {galleryData.breadcrumbs.map((crumb, index) => (
      <>
        {index === galleryData.breadcrumbs.length - 1 ? (
          <span class="font-semibold">{crumb.name}</span>
        ) : (
          <>
            <a href={`${crumb.path}`} class="link hover:text-primary no-underline">
              {crumb.name}
            </a>
            <span class="mx-2 opacity-40">/</span>
          </>
        )}
      </>
    ))}
  </nav>

  <div class="container-fluid mx-auto px-2 md:px-4 py-4">
    <!-- Breadcrumbs (visible only on smaller screens) -->
    <nav class="flex lg:hidden flex-wrap items-center mb-6">
      {galleryData.parentPath !== null && (
        <a href={`${galleryData.parentPath}`} class="link hover:text-primary no-underline me-4">
          &larr;
        </a>
      )}
      {galleryData.parentPath == null && (
        <span class="me-4 opacity-20">
          &larr;  
        </span>
      )}
      {galleryData.breadcrumbs.map((crumb, index) => (
        <>
          {index === galleryData.breadcrumbs.length - 1 ? (
            <span class="font-semibold">{crumb.name}</span>
          ) : (
            <>
              <a href={`${crumb.path}`} class="link hover:text-primary no-underline">
                {crumb.name}
              </a>
              <span class="mx-2 opacity-40">/</span>
            </>
          )}
        </>
      ))}
    </nav>

    <!-- Back button 
    {galleryData.parentPath !== null && (
      <div class="mb-6">
        <a href={`${galleryData.parentPath}`} class="btn btn-soft btn-primary">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back
        </a>
      </div>
    )}-->

    <!-- Folders Section -->
    {galleryData.folders.length > 0 && (
      <div class="mb-12">
        {/* <h2 class="text-2xl font-bold mb-4">Folders</h2> */}
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6">
          {galleryData.folders.reverse().map(folder => (
            <a href={`${folder.path}`} class="card bg-base-200 hover:bg-base-300 transition-colors shadow-lg hover:shadow-xl">
              <figure class="aspect-video md:aspect-square bg-base-300 relative overflow-hidden">
                {folder.thumbnail ? (
                  <img 
                    src={folder.thumbnail} 
                    alt={folder.name}
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <div class="flex items-center justify-center w-full h-full">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 opacity-30" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
                    </svg>
                  </div>
                )}
              </figure>
              <div class="card-body p-4">
                <h3 class="card-title text-sm">{folder.name}</h3>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}

    <!-- Description Section -->
    {galleryData.description && (
      <div class="mb-6 w-full prose prose-sm max-w-none">
        <div set:html={descriptionHtml} />
      </div>
    )}

    <!-- Images Section -->
    {galleryData.images.length > 0 && (
      <div>
        {/* <h2 class="text-2xl font-bold mb-4">Photos</h2> */}
        <div class="flex flex-wrap gap-2 flex-row">
          {galleryData.images.map((image, index) => (
            <div class="relative group cursor-pointer overflow-hidden rounded-xs shadow-lg hover:shadow-xl transition-shadow">
              <a href={image.path} data-lightbox-trigger data-image-index={index}>
                <img 
                  src={image.path} 
                  alt={image.name}
                  class="w-full h-auto md:h-64 md:w-auto object-cover group-hover:scale-110 transition-transform duration-300"
                  loading="lazy"
                />
                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/30 transition-all duration-300 flex flex-col items-center justify-center pointer-events-none">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-white opacity-0 group-hover:opacity-100 transition-opacity duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7" />
                  </svg>
                  <p class="text-white text-sm mt-2 px-2 text-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 max-w-full truncate">
                    {image.name}
                  </p>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Empty state -->
    {galleryData.folders.length === 0 && galleryData.images.length === 0 && (
      <div class="text-center py-16">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 mx-auto opacity-20 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        <p class="text-lg opacity-60">This folder is empty</p>
      </div>
    )}
  </div>

  <!-- Lightbox -->
  {galleryData.images.length > 0 && (
    <Lightbox images={galleryData.images} />
  )}
</Layout>

